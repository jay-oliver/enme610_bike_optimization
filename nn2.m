% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by Neural Fitting app
% Created 05-Dec-2024 20:15:39
%
% This script assumes these variables are defined:
%
%   x - input data.
%   Y - target data.

x = x';
t = Y';

% Choose a Training Function
trainFcn = 'trainbr';  % Bayesian Regularization.

% Create a Fitting Network
hiddenLayerSize = 50;
net = fitnet(hiddenLayerSize,trainFcn);

% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;

% Train the Network
[net,tr] = train(net,x,t);

% Test the Network
y = net(x);
e = gsubtract(t,y);
performance = perform(net,t,y)

% View the Network
%view(net)

% Plots
% Uncomment these lines to enable various plots.
figure, plotperform(tr)
figure, plottrainstate(tr)
figure, ploterrhist(e)
figure, plotregression(t,y)
%figure, plotfit(net,x,t)

